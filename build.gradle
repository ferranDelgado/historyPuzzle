buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'io.ratpack:ratpack-gradle:1.7.6'
    }
}

plugins {
    id "idea"
    id "com.github.node-gradle.node" version "2.2.3"
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: "io.ratpack.ratpack-java"

dependencies {
    implementation ratpack.dependency("guice")
    implementation ratpack.dependency("rx")
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'ch.qos.logback:logback-core:1.3.0-alpha5'
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha5'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.10.3'

    implementation 'com.zaxxer:HikariCP:3.4.2'
    implementation 'org.jdbi:jdbi3-kotlin:3.12.2'
    implementation 'org.jdbi:jdbi3-core:3.12.2'
//    implementation 'mysql:mysql-connector-java:8.0.19'
    implementation 'org.postgresql:postgresql:42.2.12.jre7'
    implementation 'org.flywaydb:flyway-core:6.3.2'


    implementation 'com.github.doyaaaaaken:kotlin-csv-jvm:0.7.3'

    //Test
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:2.0.9"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:2.0.9"
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect"

    testImplementation 'org.amshove.kluent:kluent:1.60'
    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.3.71'
}

// setup the test task
test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        compileClasspath += sourceSets.test.output
        runtimeClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.test.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeEngines 'spek2'
    }

    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest

repositories {
    jcenter()
    mavenCentral()
}

wrapper {
    gradleVersion = '6.3'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

application {
    mainClassName = 'com.historypuzzle.AppKt'
}

node {
    // Version of node to use.
    version = '12.16.1'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")

    // Set the work directory for Yarn
//    yarnWorkDir = file("${project.buildDir}/yarn")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}/app")
}

task copyVueApp(type: Copy) {
    dependsOn yarn_install
    dependsOn yarn_build
    def currentDir = new File("").absolutePath
    from "$currentDir/app/dist"
    into "$currentDir/src/ratpack"
    tasks.findByName('yarn_build').mustRunAfter yarn_install
}

task stage {
    dependsOn copyVueApp
    dependsOn installDist
    tasks.findByName('installDist').mustRunAfter copyVueApp
}